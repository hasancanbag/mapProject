{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hasan\\\\webproj\\\\openlayers-project\\\\src\\\\components\\\\Button.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectButtons, togglePopup } from \"../store/buttonSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Buttons = () => {\n  _s();\n  const dispatch = useDispatch();\n  const buttons = useSelector(selectButtons);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex space-x-4\",\n    children: buttons.map(button => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `px-4 py-2 text-white rounded ${button.color}`,\n      onClick: () => {\n        if (button.id === 1) dispatch(togglePopup());\n      },\n      children: button.text\n    }, button.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(Buttons, \"tmeolpHC7lG2FYyfMQMX/iorNPM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Buttons;\nexport default Buttons;\nvar _c;\n$RefreshReg$(_c, \"Buttons\");","map":{"version":3,"names":["React","useSelector","useDispatch","selectButtons","togglePopup","jsxDEV","_jsxDEV","Buttons","_s","dispatch","buttons","className","children","map","button","color","onClick","id","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hasan/webproj/openlayers-project/src/components/Button.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectButtons, togglePopup } from \"../store/buttonSlice\";\r\n\r\nconst Buttons = () => {\r\n  const dispatch = useDispatch();\r\n  const buttons = useSelector(selectButtons);\r\n\r\n  return (\r\n    <div className=\"flex space-x-4\">\r\n      {buttons.map((button) => (\r\n        <button\r\n          key={button.id}\r\n          className={`px-4 py-2 text-white rounded ${button.color}`}\r\n          onClick={() => {\r\n            if (button.id === 1) dispatch(togglePopup());\r\n          }}\r\n        >\r\n          {button.text}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,aAAa,EAAEC,WAAW,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,OAAO,GAAGT,WAAW,CAACE,aAAa,CAAC;EAE1C,oBACEG,OAAA;IAAKK,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BF,OAAO,CAACG,GAAG,CAAEC,MAAM,iBAClBR,OAAA;MAEEK,SAAS,EAAE,gCAAgCG,MAAM,CAACC,KAAK,EAAG;MAC1DC,OAAO,EAAEA,CAAA,KAAM;QACb,IAAIF,MAAM,CAACG,EAAE,KAAK,CAAC,EAAER,QAAQ,CAACL,WAAW,CAAC,CAAC,CAAC;MAC9C,CAAE;MAAAQ,QAAA,EAEDE,MAAM,CAACI;IAAI,GANPJ,MAAM,CAACG,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOR,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CAnBID,OAAO;EAAA,QACML,WAAW,EACZD,WAAW;AAAA;AAAAsB,EAAA,GAFvBhB,OAAO;AAqBb,eAAeA,OAAO;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}