{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const fetchWktData = createAsyncThunk('wkt/fetchWktData', async () => {\n  const response = await fetch('https://localhost:7014/api/Logs');\n  const data = await response.json();\n  return data;\n});\nconst wktSlice = createSlice({\n  name: 'wkt',\n  initialState: {\n    wktData: [],\n    status: 'idle',\n    error: null,\n    hasFetched: false\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchWktData.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchWktData.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.wktData = action.payload; // API'den gelen veriyi sakla\n    }).addCase(fetchWktData.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n      state.hasFetched = true;\n    });\n  }\n});\nexport default wktSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchWktData","response","fetch","data","json","wktSlice","name","initialState","wktData","status","error","hasFetched","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/hasan/webproj/openlayers-project/src/store/wktSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const fetchWktData = createAsyncThunk('wkt/fetchWktData', async () => {\r\n  const response = await fetch('https://localhost:7014/api/Logs');\r\n  const data = await response.json();\r\n  return data;\r\n});\r\n\r\nconst wktSlice = createSlice({\r\n  name: 'wkt',\r\n  initialState: {\r\n    wktData: [], \r\n    status: 'idle', \r\n    error: null,\r\n    hasFetched: false,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchWktData.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchWktData.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.wktData = action.payload; // API'den gelen veriyi sakla\r\n      })\r\n      .addCase(fetchWktData.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n        state.hasFetched = true;\r\n      });\r\n  },\r\n});\r\n\r\nexport default wktSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,YAAY,GAAGD,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EAC3E,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;EAC/D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb,CAAC,CAAC;AAEF,MAAME,QAAQ,GAAGP,WAAW,CAAC;EAC3BQ,IAAI,EAAE,KAAK;EACXC,YAAY,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE,IAAI;IACXC,UAAU,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACf,YAAY,CAACgB,OAAO,EAAGC,KAAK,IAAK;MACxCA,KAAK,CAACR,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDM,OAAO,CAACf,YAAY,CAACkB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACR,MAAM,GAAG,WAAW;MAC1BQ,KAAK,CAACT,OAAO,GAAGW,MAAM,CAACC,OAAO,CAAC,CAAC;IAClC,CAAC,CAAC,CACDL,OAAO,CAACf,YAAY,CAACqB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACR,MAAM,GAAG,QAAQ;MACvBQ,KAAK,CAACP,KAAK,GAAGS,MAAM,CAACT,KAAK,CAACY,OAAO;MAClCL,KAAK,CAACN,UAAU,GAAG,IAAI;IACzB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeN,QAAQ,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}