{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const fetchWktData = createAsyncThunk('wkt/fetchWktData', async () => {\n  const response = await fetch('https://localhost:7014/api/Logs');\n  const data = await response.json();\n  return data;\n});\nconst wktSlice = createSlice({\n  name: 'wkt',\n  initialState: {\n    wktData: [],\n    status: 'idle',\n    error: null,\n    hasFetched: false\n  },\n  reducers: {\n    resetHasFetched: state => {\n      state.hasFetched = false;\n    },\n    addFeature: (state, action) => {\n      state.wktData.push(action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchWktData.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchWktData.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.wktData = action.payload;\n      state.hasFetched = true; // API'den gelen veriyi sakla\n    }).addCase(fetchWktData.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const selectWktData = state => state.wkt.wktData;\nexport const {\n  resetHasFetched,\n  addFeature\n} = wktSlice.actions; // Veriyi seç\nexport const selectHasFetched = state => state.wkt.hasFetched; // Durumu seç\nexport const selectWktStatus = state => state.wkt.status; // Yüklenme durumunu seç\nexport const selectWktError = state => state.wkt.error; // Hata mesajını seç\nexport default wktSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchWktData","response","fetch","data","json","wktSlice","name","initialState","wktData","status","error","hasFetched","reducers","resetHasFetched","state","addFeature","action","push","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","message","selectWktData","wkt","actions","selectHasFetched","selectWktStatus","selectWktError","reducer"],"sources":["C:/Users/hasan/webproj/openlayers-project/src/store/wktSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const fetchWktData = createAsyncThunk('wkt/fetchWktData', async () => {\r\n  const response = await fetch('https://localhost:7014/api/Logs');\r\n  const data = await response.json();\r\n  return data;\r\n});\r\n\r\nconst wktSlice = createSlice({\r\n  name: 'wkt',\r\n  initialState: {\r\n    wktData: [], \r\n    status: 'idle', \r\n    error: null,\r\n    hasFetched: false,\r\n  },\r\n  reducers: {\r\n    resetHasFetched: (state) => {\r\n      state.hasFetched = false;\r\n    },\r\n    addFeature: (state, action) => {\r\n      state.wktData.push(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchWktData.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchWktData.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.wktData = action.payload;\r\n        state.hasFetched = true; // API'den gelen veriyi sakla\r\n      })\r\n      .addCase(fetchWktData.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const selectWktData = (state) => state.wkt.wktData;\r\nexport const { resetHasFetched, addFeature } = wktSlice.actions; // Veriyi seç\r\nexport const selectHasFetched = (state) => state.wkt.hasFetched; // Durumu seç\r\nexport const selectWktStatus = (state) => state.wkt.status; // Yüklenme durumunu seç\r\nexport const selectWktError = (state) => state.wkt.error; // Hata mesajını seç\r\nexport default wktSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,YAAY,GAAGD,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EAC3E,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;EAC/D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb,CAAC,CAAC;AAEF,MAAME,QAAQ,GAAGP,WAAW,CAAC;EAC3BQ,IAAI,EAAE,KAAK;EACXC,YAAY,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE,IAAI;IACXC,UAAU,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE;IACRC,eAAe,EAAGC,KAAK,IAAK;MAC1BA,KAAK,CAACH,UAAU,GAAG,KAAK;IAC1B,CAAC;IACDI,UAAU,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7BF,KAAK,CAACN,OAAO,CAACS,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACpC;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACrB,YAAY,CAACsB,OAAO,EAAGR,KAAK,IAAK;MACxCA,KAAK,CAACL,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDY,OAAO,CAACrB,YAAY,CAACuB,SAAS,EAAE,CAACT,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACL,MAAM,GAAG,WAAW;MAC1BK,KAAK,CAACN,OAAO,GAAGQ,MAAM,CAACE,OAAO;MAC9BJ,KAAK,CAACH,UAAU,GAAG,IAAI,CAAC,CAAC;IAC3B,CAAC,CAAC,CACDU,OAAO,CAACrB,YAAY,CAACwB,QAAQ,EAAE,CAACV,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACL,MAAM,GAAG,QAAQ;MACvBK,KAAK,CAACJ,KAAK,GAAGM,MAAM,CAACN,KAAK,CAACe,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAIZ,KAAK,IAAKA,KAAK,CAACa,GAAG,CAACnB,OAAO;AACzD,OAAO,MAAM;EAAEK,eAAe;EAAEE;AAAW,CAAC,GAAGV,QAAQ,CAACuB,OAAO,CAAC,CAAC;AACjE,OAAO,MAAMC,gBAAgB,GAAIf,KAAK,IAAKA,KAAK,CAACa,GAAG,CAAChB,UAAU,CAAC,CAAC;AACjE,OAAO,MAAMmB,eAAe,GAAIhB,KAAK,IAAKA,KAAK,CAACa,GAAG,CAAClB,MAAM,CAAC,CAAC;AAC5D,OAAO,MAAMsB,cAAc,GAAIjB,KAAK,IAAKA,KAAK,CAACa,GAAG,CAACjB,KAAK,CAAC,CAAC;AAC1D,eAAeL,QAAQ,CAAC2B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}