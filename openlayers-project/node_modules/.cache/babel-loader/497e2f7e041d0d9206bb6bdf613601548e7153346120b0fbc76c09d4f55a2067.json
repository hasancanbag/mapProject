{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hasan\\\\webproj\\\\openlayers-project\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchWktData } from '../store/wktSlice';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport OSM from 'ol/source/OSM';\nimport { WKT } from 'ol/format';\nimport { fromLonLat } from 'ol/proj';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const dispatch = useDispatch();\n  const wktData = useSelector(state => state.wkt.wktData);\n  const status = useSelector(state => state.wkt.status);\n  useEffect(() => {\n    dispatch(fetchWktData()); // Redux üzerinden veri çek\n  }, [dispatch]);\n  useEffect(() => {\n    const vectorSource = new VectorSource();\n    const map = new Map({\n      target: 'map',\n      layers: [new TileLayer({\n        source: new OSM()\n      }), new VectorLayer({\n        source: vectorSource\n      })],\n      view: new View({\n        center: fromLonLat([0, 0]),\n        zoom: 2\n      })\n    });\n    if (status === 'succeeded') {\n      const format = new WKT();\n      wktData.forEach(wkt => {\n        const feature = format.readFeature(wkt, {\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        vectorSource.addFeature(feature);\n      });\n    }\n  }, [wktData, status]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    className: \"w-full h-screen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n_s(MapComponent, \"6mOvDBmvO3xl0+Fvk0F1kI3WuRQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","fetchWktData","Map","View","TileLayer","VectorLayer","VectorSource","OSM","WKT","fromLonLat","jsxDEV","_jsxDEV","MapComponent","_s","dispatch","wktData","state","wkt","status","vectorSource","map","target","layers","source","view","center","zoom","format","forEach","feature","readFeature","dataProjection","featureProjection","addFeature","id","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hasan/webproj/openlayers-project/src/components/Map.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchWktData } from '../store/wktSlice';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport OSM from 'ol/source/OSM';\r\nimport { WKT } from 'ol/format';\r\nimport { fromLonLat } from 'ol/proj';\r\n\r\nconst MapComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const wktData = useSelector((state) => state.wkt.wktData);\r\n  const status = useSelector((state) => state.wkt.status);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchWktData()); // Redux üzerinden veri çek\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const vectorSource = new VectorSource();\r\n\r\n    const map = new Map({\r\n      target: 'map',\r\n      layers: [\r\n        new TileLayer({ source: new OSM() }),\r\n        new VectorLayer({ source: vectorSource }),\r\n      ],\r\n      view: new View({ center: fromLonLat([0, 0]), zoom: 2 }),\r\n    });\r\n\r\n    if (status === 'succeeded') {\r\n      const format = new WKT();\r\n      wktData.forEach((wkt) => {\r\n        const feature = format.readFeature(wkt, {\r\n          dataProjection: 'EPSG:4326',\r\n          featureProjection: 'EPSG:3857',\r\n        });\r\n        vectorSource.addFeature(feature);\r\n      });\r\n    }\r\n  }, [wktData, status]);\r\n\r\n  return <div id=\"map\" className=\"w-full h-screen\"></div>;\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,SAAS,MAAM,eAAe;AACrC,OAAOC,WAAW,MAAM,iBAAiB;AACzC,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,GAAG,MAAM,eAAe;AAC/B,SAASC,GAAG,QAAQ,WAAW;AAC/B,SAASC,UAAU,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,OAAO,GAAGhB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACC,GAAG,CAACF,OAAO,CAAC;EACzD,MAAMG,MAAM,GAAGnB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACC,GAAG,CAACC,MAAM,CAAC;EAEvDpB,SAAS,CAAC,MAAM;IACdgB,QAAQ,CAACb,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACa,QAAQ,CAAC,CAAC;EAEdhB,SAAS,CAAC,MAAM;IACd,MAAMqB,YAAY,GAAG,IAAIb,YAAY,CAAC,CAAC;IAEvC,MAAMc,GAAG,GAAG,IAAIlB,GAAG,CAAC;MAClBmB,MAAM,EAAE,KAAK;MACbC,MAAM,EAAE,CACN,IAAIlB,SAAS,CAAC;QAAEmB,MAAM,EAAE,IAAIhB,GAAG,CAAC;MAAE,CAAC,CAAC,EACpC,IAAIF,WAAW,CAAC;QAAEkB,MAAM,EAAEJ;MAAa,CAAC,CAAC,CAC1C;MACDK,IAAI,EAAE,IAAIrB,IAAI,CAAC;QAAEsB,MAAM,EAAEhB,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAAEiB,IAAI,EAAE;MAAE,CAAC;IACxD,CAAC,CAAC;IAEF,IAAIR,MAAM,KAAK,WAAW,EAAE;MAC1B,MAAMS,MAAM,GAAG,IAAInB,GAAG,CAAC,CAAC;MACxBO,OAAO,CAACa,OAAO,CAAEX,GAAG,IAAK;QACvB,MAAMY,OAAO,GAAGF,MAAM,CAACG,WAAW,CAACb,GAAG,EAAE;UACtCc,cAAc,EAAE,WAAW;UAC3BC,iBAAiB,EAAE;QACrB,CAAC,CAAC;QACFb,YAAY,CAACc,UAAU,CAACJ,OAAO,CAAC;MAClC,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACd,OAAO,EAAEG,MAAM,CAAC,CAAC;EAErB,oBAAOP,OAAA;IAAKuB,EAAE,EAAC,KAAK;IAACC,SAAS,EAAC;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACzD,CAAC;AAAC1B,EAAA,CAlCID,YAAY;EAAA,QACCZ,WAAW,EACZD,WAAW,EACZA,WAAW;AAAA;AAAAyC,EAAA,GAHtB5B,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}