{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst featureSlice = createSlice({\n  name: \"feature\",\n  initialState: {\n    buttons: [{\n      id: 1,\n      text: \"Add Feature\",\n      color: \"bg-blue-500\"\n    }, {\n      id: 2,\n      text: \"Query\",\n      color: \"bg-blue-500\"\n    }],\n    popupVisible: false,\n    // Pop-up'un açık/kapalı durumunu tutar\n    selectedOption: null // Kullanıcının seçimini tutar\n  },\n  reducers: {\n    togglePopup(state) {\n      state.popupVisible = !state.popupVisible;\n    },\n    setSelectedOption(state, action) {\n      state.selectedOption = action.payload;\n      state.popupVisible = false; // Seçim yapıldığında pop-up'u kapat\n    }\n  }\n});\nexport const {\n  togglePopup,\n  setSelectedOption\n} = featureSlice.actions;\nexport const selectButtons = state => state.feature.buttons;\nexport const selectPopupVisible = state => state.feature.popupVisible;\nexport const selectSelectedOption = state => state.feature.selectedOption;\nexport default featureSlice.reducer;","map":{"version":3,"names":["createSlice","featureSlice","name","initialState","buttons","id","text","color","popupVisible","selectedOption","reducers","togglePopup","state","setSelectedOption","action","payload","actions","selectButtons","feature","selectPopupVisible","selectSelectedOption","reducer"],"sources":["C:/Users/hasan/webproj/openlayers-project/src/store/buttonSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst featureSlice = createSlice({\r\n  name: \"feature\",\r\n  initialState: {\r\n    buttons: [\r\n      {\r\n        id: 1,\r\n        text: \"Add Feature\",\r\n        color: \"bg-blue-500\",\r\n      },\r\n      {\r\n        id: 2,\r\n        text: \"Query\",\r\n        color: \"bg-blue-500\",\r\n      },\r\n    ],\r\n    popupVisible: false, // Pop-up'un açık/kapalı durumunu tutar\r\n    selectedOption: null, // Kullanıcının seçimini tutar\r\n  },\r\n  reducers: {\r\n    togglePopup(state) {\r\n      state.popupVisible = !state.popupVisible;\r\n    },\r\n    setSelectedOption(state, action) {\r\n      state.selectedOption = action.payload;\r\n      state.popupVisible = false; // Seçim yapıldığında pop-up'u kapat\r\n    },\r\n  },\r\n});\r\n\r\nexport const { togglePopup, setSelectedOption } = featureSlice.actions;\r\nexport const selectButtons = (state) => state.feature.buttons;\r\nexport const selectPopupVisible = (state) => state.feature.popupVisible;\r\nexport const selectSelectedOption = (state) => state.feature.selectedOption;\r\n\r\nexport default featureSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGD,WAAW,CAAC;EAC/BE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,OAAO,EAAE,CACP;MACEC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,aAAa;MACnBC,KAAK,EAAE;IACT,CAAC,EACD;MACEF,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;IACT,CAAC,CACF;IACDC,YAAY,EAAE,KAAK;IAAE;IACrBC,cAAc,EAAE,IAAI,CAAE;EACxB,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAE;MACjBA,KAAK,CAACJ,YAAY,GAAG,CAACI,KAAK,CAACJ,YAAY;IAC1C,CAAC;IACDK,iBAAiBA,CAACD,KAAK,EAAEE,MAAM,EAAE;MAC/BF,KAAK,CAACH,cAAc,GAAGK,MAAM,CAACC,OAAO;MACrCH,KAAK,CAACJ,YAAY,GAAG,KAAK,CAAC,CAAC;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG,WAAW;EAAEE;AAAkB,CAAC,GAAGZ,YAAY,CAACe,OAAO;AACtE,OAAO,MAAMC,aAAa,GAAIL,KAAK,IAAKA,KAAK,CAACM,OAAO,CAACd,OAAO;AAC7D,OAAO,MAAMe,kBAAkB,GAAIP,KAAK,IAAKA,KAAK,CAACM,OAAO,CAACV,YAAY;AACvE,OAAO,MAAMY,oBAAoB,GAAIR,KAAK,IAAKA,KAAK,CAACM,OAAO,CAACT,cAAc;AAE3E,eAAeR,YAAY,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}