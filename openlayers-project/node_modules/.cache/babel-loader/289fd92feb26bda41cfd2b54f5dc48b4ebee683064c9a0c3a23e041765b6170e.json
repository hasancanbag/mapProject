{"ast":null,"code":"/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport { TRUE } from '../functions.js';\nimport { clear } from '../obj.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { never, shiftKeyOnly, singleClick } from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes a {@link module:ol/Feature~Feature} and a\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ = options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n      this.features_.addEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n      this.features_.removeEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */\n      this.getMap().getAllLayers().find(function (layer) {\n        if (layer instanceof VectorLayer && layer.getSource() && layer.getSource().hasFeature(feature)) {\n          return layer;\n        }\n      });\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (interaction !== this && interaction instanceof Select && interaction.getStyle() && interaction.getFeatures().getArray().lastIndexOf(feature) !== -1) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      /**\n       * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n       * @param {import(\"../layer/Layer.js\").default} layer Layer.\n       * @return {boolean|undefined} Continue to iterate over the features.\n       */\n      (feature, layer) => {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return;\n        }\n        this.addFeatureLayerAssociation_(feature, layer);\n        selected.push(feature);\n        return !this.multi_;\n      }, {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      /**\n       * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n       * @param {import(\"../layer/Layer.js\").default} layer Layer.\n       * @return {boolean|undefined} Continue to iterate over the features.\n       */\n      (feature, layer) => {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return;\n        }\n        if ((add || toggle) && !features.getArray().includes(feature)) {\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n        } else if ((remove || toggle) && features.getArray().includes(feature)) {\n          deselected.push(feature);\n          this.removeFeatureLayerAssociation_(feature);\n        }\n        return !this.multi_;\n      }, {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\nexport default Select;","map":{"version":3,"names":["Collection","CollectionEventType","Event","Feature","Interaction","VectorLayer","TRUE","clear","createEditingStyle","extend","getUid","never","shiftKeyOnly","singleClick","SelectEventType","SELECT","SelectEvent","constructor","type","selected","deselected","mapBrowserEvent","originalFeatureStyles","Select","options","on","once","un","boundAddFeature_","addFeature_","bind","boundRemoveFeature_","removeFeature_","condition_","condition","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","filter","hitTolerance_","hitTolerance","style_","style","undefined","getDefaultStyleFunction","features_","features","layerFilter","layers","layer","includes","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","feature","getFeatures","getHitTolerance","getLayer","setHitTolerance","setMap","map","currentMap","getMap","forEach","restorePreviousStyle_","addEventListener","ADD","REMOVE","applySelectedStyle_","removeEventListener","evt","element","getAllLayers","find","getSource","hasFeature","getStyle","key","setStyle","interactions","getInteractions","getArray","i","length","interaction","lastIndexOf","removeFeatureLayerAssociation_","handleEvent","add","remove","toggle","set","forEachFeatureAtPixel","pixel","push","getLength","item","index","indexOf","splice","j","dispatchEvent","styles","getGeometry","getType"],"sources":["C:/Users/hasan/webproj/openlayers-project/node_modules/ol/interaction/Select.js"],"sourcesContent":["/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes a {@link module:ol/Feature~Feature} and a\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent,\n        ),\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,UAAU,MAAM,kBAAkB;AACzC,OAAOC,mBAAmB,MAAM,2BAA2B;AAC3D,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,SAAQC,IAAI,QAAO,iBAAiB;AACpC,SAAQC,KAAK,QAAO,WAAW;AAC/B,SAAQC,kBAAkB,QAAO,mBAAmB;AACpD,SAAQC,MAAM,QAAO,aAAa;AAClC,SAAQC,MAAM,QAAO,YAAY;AACjC,SAAQC,KAAK,EAAEC,YAAY,EAAEC,WAAW,QAAO,wBAAwB;;AAEvE;AACA;AACA;AACA,MAAMC,eAAe,GAAG;EACtB;AACF;AACA;AACA;AACA;EACEC,MAAM,EAAE;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,SAASd,KAAK,CAAC;EACrC;AACF;AACA;AACA;AACA;AACA;AACA;EACEe,WAAWA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,eAAe,EAAE;IACvD,KAAK,CAACH,IAAI,CAAC;;IAEX;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAGA,QAAQ;;IAExB;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACC,UAAU,GAAGA,UAAU;;IAE5B;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACC,eAAe,GAAGA,eAAe;EACxC;AACF;;AAEA;AACA;AACA;AACA;AACA,MAAMC,qBAAqB,GAAG,CAAC,CAAC;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}