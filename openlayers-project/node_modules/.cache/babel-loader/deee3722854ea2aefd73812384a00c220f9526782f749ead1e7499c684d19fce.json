{"ast":null,"code":"/*import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateFeature } from '../store/wktSlice';\r\n\r\n\r\nexport const EditFeature = ({ id, name, wkt, userId, onClose }) => {\r\n  const [localName, setLocalName] = useState(name);\r\n  const [localUserId,  setLocalUserId] = useState(userId);\r\n  const [localWkt, setLocalWkt] = useState(wkt);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const geometry = localWkt.split(\"(\")[0].trim();\r\n  \r\n\r\n\r\n  const handleSave = async (userId) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const token = localStorage.getItem(\"token\");\r\n  \r\n      const response = await fetch(`https://localhost:7014/api/Logs/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          id: id,\r\n          name: localName,\r\n          log: localWkt,\r\n          UserId: userId,\r\n        }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Failed to update feature');\r\n      }\r\n  \r\n      const data = await response.json();\r\n  \r\n      if (!data.result) {\r\n        throw new Error(data.message || 'Failed to update feature');\r\n      }\r\n  \r\n      dispatch(updateFeature(data.value)); \r\n      onClose();\r\n  \r\n      alert('Feature updated successfully!');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"fixed z-60 inset-0 overflow-y-auto\">\r\n      <div className=\"flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0\">\r\n        <div className=\"fixed inset-0 transition-opacity\">\r\n          <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n        </div>\r\n\r\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"></span>\r\n\r\n        <div\r\n          className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6\"\r\n        >\r\n          <div className=\"sm:flex sm:items-start\">\r\n            <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-blue-100 sm:mx-0 sm:h-10 sm:w-10\">\r\n            <svg\r\n             className=\"h-6 w-6 text-blue-600\"\r\n             fill=\"none\"\r\n             stroke=\"currentColor\"\r\n             strokeWidth=\"2\"\r\n             viewBox=\"0 0 24 24\"\r\n             xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M16.862 3.487a2.5 2.5 0 0 1 3.535 3.535L9 18.414 4 19l.586-5L16.862 3.487Z\"\r\n            />\r\n            </svg>\r\n            </div>\r\n            <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\r\n                Edit Feature\r\n              </h3>\r\n              <div className=\"mt-2\">\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={localName}\r\n                  onChange={(e) => setLocalName(e.target.value)}\r\n                  className=\"mt-1 px-3 py-2 block w-full shadow-sm border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n              <div className=\"mt-2\">\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  User Id\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={localUserId}\r\n                  onChange={(e) => setLocalUserId(e.target.value)}\r\n                  className=\"mt-1 px-3 py-2 block w-full shadow-sm border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n              <div className=\"mt-2\">\r\n                <p className=\"text-sm leading-5 text-gray-500\">\r\n                  <strong>Type:</strong> {geometry}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-5 sm:mt-4 sm:flex sm:flex-row-reverse\">\r\n            <span className=\"flex w-full rounded-md shadow-sm sm:ml-3 sm:w-auto\">\r\n              <button\r\n                onClick={() => handleSave(localUserId)}\r\n                disabled={loading}\r\n                className=\"inline-flex justify-center w-full rounded-md border border-transparent px-4 py-2 bg-blue-600 text-base leading-6 font-medium text-white shadow-sm hover:bg-blue-500 focus:outline-none focus:shadow-outline-blue transition ease-in-out duration-150 sm:text-sm sm:leading-5\"\r\n              >\r\n                {loading ? 'Saving...' : 'Save'}\r\n              </button>\r\n            </span>\r\n\r\n            <span className=\"mt-3 flex w-full rounded-md shadow-sm sm:mt-0 sm:w-auto\">\r\n              <button\r\n                onClick={onClose}\r\n                className=\"inline-flex justify-center w-full rounded-md border border-gray-300 px-4 py-2 bg-white text-base leading-6 font-medium text-gray-700 shadow-sm hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue transition ease-in-out duration-150 sm:text-sm sm:leading-5\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\na\r\nexport default EditFeature; */\n\nconst handleSave = async userId => {\n  if (!id || !localName.trim()) {\n    setError(\"ID ve Name alanları boş bırakılamaz.\");\n    return;\n  }\n  try {\n    setLoading(true);\n    setError(null);\n    const token = localStorage.getItem(\"token\");\n    const response = await fetch(`https://localhost:7014/api/Logs/${id}`, {\n      method: 'PUT',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id,\n        name: localName,\n        log: localWkt,\n        UserId: userId\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to update feature');\n    }\n    const data = await response.json();\n    if (!data.result) {\n      throw new Error(data.message || 'Failed to update feature');\n    }\n    dispatch(updateFeature(data.value));\n    onClose();\n    alert('Feature updated successfully!');\n  } catch (err) {\n    setError(err.message);\n  } finally {\n    setLoading(false);\n  }\n};","map":{"version":3,"names":["handleSave","userId","id","localName","trim","setError","setLoading","token","localStorage","getItem","response","fetch","method","headers","Authorization","body","JSON","stringify","name","log","localWkt","UserId","ok","Error","data","json","result","message","dispatch","updateFeature","value","onClose","alert","err"],"sources":["C:/Users/hasan/webproj/openlayers-project/src/components/EditFeature.js"],"sourcesContent":["\r\n/*import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateFeature } from '../store/wktSlice';\r\n\r\n\r\nexport const EditFeature = ({ id, name, wkt, userId, onClose }) => {\r\n  const [localName, setLocalName] = useState(name);\r\n  const [localUserId,  setLocalUserId] = useState(userId);\r\n  const [localWkt, setLocalWkt] = useState(wkt);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const geometry = localWkt.split(\"(\")[0].trim();\r\n  \r\n\r\n\r\n  const handleSave = async (userId) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const token = localStorage.getItem(\"token\");\r\n  \r\n      const response = await fetch(`https://localhost:7014/api/Logs/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          id: id,\r\n          name: localName,\r\n          log: localWkt,\r\n          UserId: userId,\r\n        }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Failed to update feature');\r\n      }\r\n  \r\n      const data = await response.json();\r\n  \r\n      if (!data.result) {\r\n        throw new Error(data.message || 'Failed to update feature');\r\n      }\r\n  \r\n      dispatch(updateFeature(data.value)); \r\n      onClose();\r\n  \r\n      alert('Feature updated successfully!');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"fixed z-60 inset-0 overflow-y-auto\">\r\n      <div className=\"flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0\">\r\n        <div className=\"fixed inset-0 transition-opacity\">\r\n          <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n        </div>\r\n\r\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"></span>\r\n\r\n        <div\r\n          className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6\"\r\n        >\r\n          <div className=\"sm:flex sm:items-start\">\r\n            <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-blue-100 sm:mx-0 sm:h-10 sm:w-10\">\r\n            <svg\r\n             className=\"h-6 w-6 text-blue-600\"\r\n             fill=\"none\"\r\n             stroke=\"currentColor\"\r\n             strokeWidth=\"2\"\r\n             viewBox=\"0 0 24 24\"\r\n             xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M16.862 3.487a2.5 2.5 0 0 1 3.535 3.535L9 18.414 4 19l.586-5L16.862 3.487Z\"\r\n            />\r\n            </svg>\r\n            </div>\r\n            <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\r\n                Edit Feature\r\n              </h3>\r\n              <div className=\"mt-2\">\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={localName}\r\n                  onChange={(e) => setLocalName(e.target.value)}\r\n                  className=\"mt-1 px-3 py-2 block w-full shadow-sm border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n              <div className=\"mt-2\">\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  User Id\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={localUserId}\r\n                  onChange={(e) => setLocalUserId(e.target.value)}\r\n                  className=\"mt-1 px-3 py-2 block w-full shadow-sm border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n              <div className=\"mt-2\">\r\n                <p className=\"text-sm leading-5 text-gray-500\">\r\n                  <strong>Type:</strong> {geometry}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-5 sm:mt-4 sm:flex sm:flex-row-reverse\">\r\n            <span className=\"flex w-full rounded-md shadow-sm sm:ml-3 sm:w-auto\">\r\n              <button\r\n                onClick={() => handleSave(localUserId)}\r\n                disabled={loading}\r\n                className=\"inline-flex justify-center w-full rounded-md border border-transparent px-4 py-2 bg-blue-600 text-base leading-6 font-medium text-white shadow-sm hover:bg-blue-500 focus:outline-none focus:shadow-outline-blue transition ease-in-out duration-150 sm:text-sm sm:leading-5\"\r\n              >\r\n                {loading ? 'Saving...' : 'Save'}\r\n              </button>\r\n            </span>\r\n\r\n            <span className=\"mt-3 flex w-full rounded-md shadow-sm sm:mt-0 sm:w-auto\">\r\n              <button\r\n                onClick={onClose}\r\n                className=\"inline-flex justify-center w-full rounded-md border border-gray-300 px-4 py-2 bg-white text-base leading-6 font-medium text-gray-700 shadow-sm hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue transition ease-in-out duration-150 sm:text-sm sm:leading-5\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\na\r\nexport default EditFeature; */\r\n\r\nconst handleSave = async (userId) => {\r\n  if (!id || !localName.trim()) {\r\n    setError(\"ID ve Name alanları boş bırakılamaz.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    setLoading(true);\r\n    setError(null);\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(`https://localhost:7014/api/Logs/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id: id,\r\n        name: localName,\r\n        log: localWkt,\r\n        UserId: userId,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to update feature');\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    if (!data.result) {\r\n      throw new Error(data.message || 'Failed to update feature');\r\n    }\r\n\r\n    dispatch(updateFeature(data.value)); \r\n    onClose();\r\n\r\n    alert('Feature updated successfully!');\r\n  } catch (err) {\r\n    setError(err.message);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,UAAU,GAAG,MAAOC,MAAM,IAAK;EACnC,IAAI,CAACC,EAAE,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC,EAAE;IAC5BC,QAAQ,CAAC,sCAAsC,CAAC;IAChD;EACF;EAEA,IAAI;IACFC,UAAU,CAAC,IAAI,CAAC;IAChBD,QAAQ,CAAC,IAAI,CAAC;IACd,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCT,EAAE,EAAE,EAAE;MACpEU,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUP,KAAK,EAAE;QAChC,cAAc,EAAE;MAClB,CAAC;MACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBf,EAAE,EAAEA,EAAE;QACNgB,IAAI,EAAEf,SAAS;QACfgB,GAAG,EAAEC,QAAQ;QACbC,MAAM,EAAEpB;MACV,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,CAACS,QAAQ,CAACY,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IAEA,MAAMC,IAAI,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;IAElC,IAAI,CAACD,IAAI,CAACE,MAAM,EAAE;MAChB,MAAM,IAAIH,KAAK,CAACC,IAAI,CAACG,OAAO,IAAI,0BAA0B,CAAC;IAC7D;IAEAC,QAAQ,CAACC,aAAa,CAACL,IAAI,CAACM,KAAK,CAAC,CAAC;IACnCC,OAAO,CAAC,CAAC;IAETC,KAAK,CAAC,+BAA+B,CAAC;EACxC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ5B,QAAQ,CAAC4B,GAAG,CAACN,OAAO,CAAC;EACvB,CAAC,SAAS;IACRrB,UAAU,CAAC,KAAK,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}