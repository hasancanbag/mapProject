{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n/* export const fetchWktData = createAsyncThunk('wkt/fetchWktData', async () => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await fetch('https://localhost:7014/api/Logs', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      token: token\r\n    })\r\n  });\r\n  const data = await response.json();\r\n  return data;\r\n}); */\n\nexport const fetchWktData = createAsyncThunk('wkt/fetchWktData', async () => {\n  const token = localStorage.getItem('token');\n  const response = await fetch('https://localhost:7014/api/Logs', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Token'ı Authorization header içinde gönder\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  const data = await response.json();\n  return data;\n});\nconst wktSlice = createSlice({\n  name: 'wkt',\n  initialState: {\n    wktData: [],\n    status: 'idle',\n    error: null,\n    hasFetched: false\n  },\n  reducers: {\n    resetHasFetched: state => {\n      state.hasFetched = true;\n    },\n    addFeature: (state, action) => {\n      state.wktData.push(action.payload);\n    },\n    deleteFeature: (state, action) => {\n      const id = action.payload;\n      state.wktData = state.wktData.filter(feature => feature.id !== id);\n    },\n    updateFeature: (state, action) => {\n      const updatedFeature = action.payload;\n      const index = state.wktData.findIndex(feature => feature.id === updatedFeature.id);\n      if (index !== -1) {\n        state.wktData[index] = updatedFeature;\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchWktData.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchWktData.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.wktData = action.payload;\n      state.hasFetched = true;\n    }).addCase(fetchWktData.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const selectWktData = state => state.wkt.wktData;\nexport const {\n  resetHasFetched,\n  addFeature,\n  updateFeature,\n  deleteFeature\n} = wktSlice.actions;\nexport const selectHasFetched = state => state.wkt.hasFetched; // Durumu seç\nexport const selectWktStatus = state => state.wkt.status; // Yüklenme durumunu seç\nexport const selectWktError = state => state.wkt.error; // Hata mesajını seç\nexport default wktSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchWktData","token","localStorage","getItem","response","fetch","method","headers","ok","Error","data","json","wktSlice","name","initialState","wktData","status","error","hasFetched","reducers","resetHasFetched","state","addFeature","action","push","payload","deleteFeature","id","filter","feature","updateFeature","updatedFeature","index","findIndex","extraReducers","builder","addCase","pending","fulfilled","rejected","message","selectWktData","wkt","actions","selectHasFetched","selectWktStatus","selectWktError","reducer"],"sources":["C:/Users/hasan/webproj/openlayers-project/src/store/wktSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n/* export const fetchWktData = createAsyncThunk('wkt/fetchWktData', async () => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await fetch('https://localhost:7014/api/Logs', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      token: token\r\n    })\r\n  });\r\n  const data = await response.json();\r\n  return data;\r\n}); */\r\n\r\nexport const fetchWktData = createAsyncThunk('wkt/fetchWktData', async () => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await fetch('https://localhost:7014/api/Logs', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}` // Token'ı Authorization header içinde gönder\r\n    }\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const data = await response.json();\r\n  return data;\r\n});\r\n\r\n\r\nconst wktSlice = createSlice({\r\n  name: 'wkt',\r\n  initialState: {\r\n    wktData: [], \r\n    status: 'idle', \r\n    error: null,\r\n    hasFetched: false,\r\n  },\r\n  reducers: {\r\n    resetHasFetched: (state) => {\r\n      state.hasFetched = true;\r\n    },\r\n    addFeature: (state, action) => {\r\n      state.wktData.push(action.payload);\r\n    },\r\n    deleteFeature: (state, action) => {\r\n      const id = action.payload;\r\n      state.wktData = state.wktData.filter(feature => feature.id !== id);\r\n    },\r\n    updateFeature: (state, action) => {\r\n      const updatedFeature = action.payload;\r\n      const index = state.wktData.findIndex((feature) => feature.id === updatedFeature.id);\r\n      if (index !== -1) {\r\n        state.wktData[index] = updatedFeature;\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchWktData.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchWktData.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.wktData = action.payload;\r\n        state.hasFetched = true;\r\n      })\r\n      .addCase(fetchWktData.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const selectWktData = (state) => state.wkt.wktData;\r\nexport const { resetHasFetched, addFeature, updateFeature, deleteFeature } = wktSlice.actions;\r\nexport const selectHasFetched = (state) => state.wkt.hasFetched; // Durumu seç\r\nexport const selectWktStatus = (state) => state.wkt.status; // Yüklenme durumunu seç\r\nexport const selectWktError = (state) => state.wkt.error; // Hata mesajını seç\r\nexport default wktSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}