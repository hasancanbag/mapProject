{"ast":null,"code":"var _s = $RefreshSig$();\nimport { deleteUser } from \"../store/userSlice\";\nimport { setDeletedFeatureId } from \"../store/featureSlice\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deletedUserId } from '../store/userSlice';\nexport const useDeleteUser = () => {\n  _s();\n  const deletedUserId = useSelector(state => state.user.deletedUserId);\n  const dispatch = useDispatch();\n  const deleteItem = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`https://localhost:7014/api/Users/${deletedUserId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (!response.ok || !data.result) {\n        throw new Error(data.message || 'Failed to delete item');\n      }\n      dispatch(deleteUser(deletedUserId));\n      return true;\n    } catch (error) {\n      console.error(error.message);\n      return false;\n    }\n  };\n  return deleteItem;\n};\n_s(useDeleteUser, \"hm3TDLOtNa8laT6rRmYMu6UHoxo=\", false, function () {\n  return [useSelector, useDispatch];\n});","map":{"version":3,"names":["deleteUser","setDeletedFeatureId","useSelector","useDispatch","deletedUserId","useDeleteUser","_s","state","user","dispatch","deleteItem","token","localStorage","getItem","response","fetch","method","headers","data","json","ok","result","Error","message","error","console"],"sources":["C:/Users/hasan/webproj/openlayers-project/src/utils/deleteUser.js"],"sourcesContent":["import { deleteUser} from \"../store/userSlice\";\r\nimport {setDeletedFeatureId} from \"../store/featureSlice\"\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {deletedUserId} from '../store/userSlice';\r\n\r\nexport const useDeleteUser = () => {\r\n  const deletedUserId = useSelector((state) => state.user.deletedUserId);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteItem = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token'); \r\n\r\n      const response = await fetch(`https://localhost:7014/api/Users/${deletedUserId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`, \r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok || !data.result) {\r\n        throw new Error(data.message || 'Failed to delete item');\r\n      }\r\n\r\n      dispatch(deleteUser(deletedUserId));\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return deleteItem;\r\n};\r\n\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAO,oBAAoB;AAC9C,SAAQC,mBAAmB,QAAO,uBAAuB;AACzD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAAQC,aAAa,QAAO,oBAAoB;AAEhD,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMF,aAAa,GAAGF,WAAW,CAAEK,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACJ,aAAa,CAAC;EACtE,MAAMK,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoCX,aAAa,EAAE,EAAE;QAChFY,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUN,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAI,CAACL,QAAQ,CAACM,EAAE,IAAI,CAACF,IAAI,CAACG,MAAM,EAAE;QAChC,MAAM,IAAIC,KAAK,CAACJ,IAAI,CAACK,OAAO,IAAI,uBAAuB,CAAC;MAC1D;MAEAd,QAAQ,CAACT,UAAU,CAACI,aAAa,CAAC,CAAC;MAEnC,OAAO,IAAI;IACb,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACD,OAAO,CAAC;MAC5B,OAAO,KAAK;IACd;EACF,CAAC;EAED,OAAOb,UAAU;AACnB,CAAC;AAACJ,EAAA,CAhCWD,aAAa;EAAA,QACFH,WAAW,EAChBC,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}