{"ast":null,"code":"/**\n * @module ol/interaction/DblClickDragZoom\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds. *\n * @property {number} [delta=1] The zoom delta applied on move of one pixel. *\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by double tap/click then drag up/down\n * with one finger/left mouse.\n * @api\n */\nclass DblClickDragZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n    super(/** @type {import(\"./Interaction.js\").InteractionOptions} */options);\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleDeltaByPixel_ = options.delta ? options.delta : 0.01;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDownUpSequence_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDoubleDownSequence_ = false;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.doubleTapTimeoutId_ = undefined;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent  map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence_) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence_ = handledUp;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        if (this.handlingDoubleDownSequence_) {\n          this.handlingDoubleDownSequence_ = false;\n          const handled = this.handleDownEvent(mapBrowserEvent);\n          this.handlingDownUpSequence_ = handled;\n          stopEvent = this.stopDown(handled);\n        } else {\n          stopEvent = this.stopDown(false);\n          this.waitForDblTap_();\n        }\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.down_.originalEvent;\n    const distance = touch0.clientY - touch1.clientY;\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = 1 - (this.lastDistance_ - distance) * this.scaleDeltaByPixel_;\n    }\n    this.lastDistance_ = distance;\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale, bypass the resolution constraint\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    map.render();\n    view.adjustResolutionInternal(scaleDelta);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 1) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      this.down_ = mapBrowserEvent;\n      if (!this.handlingDownUpSequence_) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events zooming out.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 0) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      this.handlingDownUpSequence_ = false;\n      this.handlingDoubleDownSequence_ = false;\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = Object.values(this.trackedPointers_);\n    }\n  }\n\n  /**\n   * Wait the second double finger tap.\n   * @private\n   */\n  waitForDblTap_() {\n    if (this.doubleTapTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.doubleTapTimeoutId_);\n      this.doubleTapTimeoutId_ = undefined;\n    } else {\n      this.handlingDoubleDownSequence_ = true;\n      this.doubleTapTimeoutId_ = setTimeout(this.endInteraction_.bind(this), 250);\n    }\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.handlingDoubleDownSequence_ = false;\n    this.doubleTapTimeoutId_ = undefined;\n  }\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN || type === MapBrowserEventType.POINTERDRAG || type === MapBrowserEventType.POINTERUP;\n}\nexport default DblClickDragZoom;","map":{"version":3,"names":["Interaction","MapBrowserEventType","DblClickDragZoom","constructor","opt_options","options","stopDown","scaleDeltaByPixel_","delta","duration_","duration","undefined","handlingDownUpSequence_","handlingDoubleDownSequence_","doubleTapTimeoutId_","trackedPointers_","targetPointers","handleEvent","mapBrowserEvent","originalEvent","stopEvent","updateTrackedPointers_","type","POINTERDRAG","handleDragEvent","preventDefault","POINTERUP","handledUp","handleUpEvent","POINTERDOWN","handled","handleDownEvent","waitForDblTap_","scaleDelta","touch0","touch1","down_","distance","clientY","lastDistance_","lastScaleDelta_","map","view","getView","render","adjustResolutionInternal","length","anchor_","beginInteraction","direction","endInteraction","isPointerDraggingEvent","event","id","pointerId","toString","Object","values","clearTimeout","setTimeout","endInteraction_","bind"],"sources":["C:/Users/hasan/webproj/openlayers-project/node_modules/ol/interaction/DblClickDragZoom.js"],"sourcesContent":["/**\n * @module ol/interaction/DblClickDragZoom\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds. *\n * @property {number} [delta=1] The zoom delta applied on move of one pixel. *\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by double tap/click then drag up/down\n * with one finger/left mouse.\n * @api\n */\nclass DblClickDragZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleDeltaByPixel_ = options.delta ? options.delta : 0.01;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDownUpSequence_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDoubleDownSequence_ = false;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.doubleTapTimeoutId_ = undefined;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent  map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence_) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence_ = handledUp;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        if (this.handlingDoubleDownSequence_) {\n          this.handlingDoubleDownSequence_ = false;\n          const handled = this.handleDownEvent(mapBrowserEvent);\n          this.handlingDownUpSequence_ = handled;\n          stopEvent = this.stopDown(handled);\n        } else {\n          stopEvent = this.stopDown(false);\n          this.waitForDblTap_();\n        }\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.down_.originalEvent;\n    const distance = touch0.clientY - touch1.clientY;\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta =\n        1 - (this.lastDistance_ - distance) * this.scaleDeltaByPixel_;\n    }\n    this.lastDistance_ = distance;\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale, bypass the resolution constraint\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    map.render();\n    view.adjustResolutionInternal(scaleDelta);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 1) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      this.down_ = mapBrowserEvent;\n      if (!this.handlingDownUpSequence_) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events zooming out.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 0) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      this.handlingDownUpSequence_ = false;\n      this.handlingDoubleDownSequence_ = false;\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = Object.values(this.trackedPointers_);\n    }\n  }\n\n  /**\n   * Wait the second double finger tap.\n   * @private\n   */\n  waitForDblTap_() {\n    if (this.doubleTapTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.doubleTapTimeoutId_);\n      this.doubleTapTimeoutId_ = undefined;\n    } else {\n      this.handlingDoubleDownSequence_ = true;\n      this.doubleTapTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        250,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.handlingDoubleDownSequence_ = false;\n    this.doubleTapTimeoutId_ = undefined;\n  }\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default DblClickDragZoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}