{"ast":null,"code":"const API_URL = \"https://localhost:7014/api/Auth\";\nexport const login = async (username, password) => {\n  const response = await fetch(`${API_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  const data = await response.json();\n  if (data.token) {\n    const expirationTime = new Date().getTime() + 60 * 60 * 1000;\n    sessionStorage.setItem('token', data.token);\n    console.log(sessionStorage.getItem('token'));\n    sessionStorage.setItem('tokenExpiration', expirationTime);\n  }\n  return data;\n};\nexport const signup = async (username, password, email) => {\n  const response = await fetch(`${API_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password,\n      email\n    })\n  });\n  return response.json();\n};\nexport const logout = () => {\n  sessionStorage.removeItem('token');\n};\nexport const getToken = () => {\n  return sessionStorage.getItem('token');\n};","map":{"version":3,"names":["API_URL","login","username","password","response","fetch","method","headers","body","JSON","stringify","data","json","token","expirationTime","Date","getTime","sessionStorage","setItem","console","log","getItem","signup","email","logout","removeItem","getToken"],"sources":["C:/Users/hasan/webproj/openlayers-project/src/services/authService.js"],"sourcesContent":["const API_URL = \"https://localhost:7014/api/Auth\";\r\n\r\nexport const login = async (username, password) => {\r\n  const response = await fetch(`${API_URL}/login`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ username, password })\r\n  });\r\n  const data = await response.json();\r\n  if (data.token) {\r\n    const expirationTime = new Date().getTime() + 60 * 60 * 1000;\r\n  sessionStorage.setItem('token', data.token);\r\n  console.log(sessionStorage.getItem('token'));\r\n  sessionStorage.setItem('tokenExpiration', expirationTime); \r\n  }\r\n  return data;\r\n};\r\n\r\nexport const signup = async (username, password, email) => {\r\n  const response = await fetch(`${API_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ username, password, email })\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const logout = () => {\r\n  sessionStorage.removeItem('token');\r\n};\r\n\r\nexport const getToken = () => {\r\n  return sessionStorage.getItem('token');\r\n};\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,iCAAiC;AAEjD,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,QAAQ,EAAE;IAC/CM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC;IAAS,CAAC;EAC7C,CAAC,CAAC;EACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClC,IAAID,IAAI,CAACE,KAAK,EAAE;IACd,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;IAC9DC,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEP,IAAI,CAACE,KAAK,CAAC;IAC3CM,OAAO,CAACC,GAAG,CAACH,cAAc,CAACI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5CJ,cAAc,CAACC,OAAO,CAAC,iBAAiB,EAAEJ,cAAc,CAAC;EACzD;EACA,OAAOH,IAAI;AACb,CAAC;AAED,OAAO,MAAMW,MAAM,GAAG,MAAAA,CAAOpB,QAAQ,EAAEC,QAAQ,EAAEoB,KAAK,KAAK;EACzD,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,SAAS,EAAE;IAChDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC,QAAQ;MAAEoB;IAAM,CAAC;EACpD,CAAC,CAAC;EACF,OAAOnB,QAAQ,CAACQ,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMY,MAAM,GAAGA,CAAA,KAAM;EAC1BP,cAAc,CAACQ,UAAU,CAAC,OAAO,CAAC;AACpC,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAC5B,OAAOT,cAAc,CAACI,OAAO,CAAC,OAAO,CAAC;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}