{"ast":null,"code":"import { jwtDecode } from \"jwt-decode\";\nimport { setisAdmin } from \"../store/adminSlice\";\nimport { useDispatch } from \"react-redux\";\nconst API_URL = \"https://localhost:7014/api/Auth\";\nconst dispatch = useDispatch();\nexport const login = async (username, password) => {\n  const response = await fetch(`${API_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  const data = await response.json();\n  if (!response.ok || !data.result) {\n    throw new Error(data.message || 'Login failed');\n  }\n  if (data.value) {\n    const decodedToken = jwtDecode(data.value);\n    const expirationDate = new Date(decodedToken.exp * 1000);\n    if (decodedToken.role == \"Admin\") {\n      dispatch(setisAdmin(true));\n    }\n    localStorage.setItem('token', data.value);\n    localStorage.setItem('tokenExpiration', expirationDate);\n  }\n  return data;\n};\nexport const signup = async (username, password, email) => {\n  const response = await fetch(`${API_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password,\n      email\n    })\n  });\n  const data = await response.json();\n  if (!response.ok || !data.result) {\n    throw new Error(data.message || 'Signup failed');\n  }\n  return data.value;\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('tokenExpiration');\n  dispatch(setisAdmin(false));\n};\nexport const getToken = () => {\n  const token = localStorage.getItem('token');\n  const expiration = localStorage.getItem('tokenExpiration');\n  if (token && expiration) {\n    const now = new Date().getTime();\n    if (now > expiration) {\n      logout();\n      return null;\n    }\n  }\n  return token;\n};","map":{"version":3,"names":["jwtDecode","setisAdmin","useDispatch","API_URL","dispatch","login","username","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","result","Error","message","value","decodedToken","expirationDate","Date","exp","role","localStorage","setItem","signup","email","logout","removeItem","getToken","token","getItem","expiration","now","getTime"],"sources":["C:/Users/hasan/webproj/openlayers-project/src/services/authService.js"],"sourcesContent":["import { jwtDecode } from \"jwt-decode\";\r\nimport { setisAdmin } from \"../store/adminSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst API_URL = \"https://localhost:7014/api/Auth\";\r\nconst dispatch = useDispatch();\r\n\r\n\r\nexport const login = async (username, password) => {\r\n  const response = await fetch(`${API_URL}/login`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ username, password })\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok || !data.result) {\r\n    throw new Error(data.message || 'Login failed');\r\n  }\r\n\r\n  if (data.value) {\r\n    const decodedToken = jwtDecode(data.value);\r\n    const expirationDate = new Date(decodedToken.exp * 1000);\r\n    if(decodedToken.role == \"Admin\"){\r\n      dispatch(setisAdmin(true));\r\n    }\r\n    localStorage.setItem('token', data.value);\r\n    localStorage.setItem('tokenExpiration', expirationDate);\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\n\r\nexport const signup = async (username, password, email) => {\r\n  const response = await fetch(`${API_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ username, password, email }),\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok || !data.result) {\r\n    throw new Error(data.message || 'Signup failed');\r\n  }\r\n\r\n  return data.value;\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('tokenExpiration');\r\n  dispatch(setisAdmin(false));\r\n};\r\n\r\nexport const getToken = () => {\r\n  const token = localStorage.getItem('token');\r\n  const expiration = localStorage.getItem('tokenExpiration');\r\n\r\n  if (token && expiration) {\r\n    const now = new Date().getTime();\r\n    if (now > expiration) {\r\n      logout(); \r\n      return null;\r\n    }\r\n  }\r\n\r\n  return token;\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}