{"ast":null,"code":"/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport { mouseOnly, shiftKeyOnly } from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(/** @type {import(\"./Pointer.js\").Options} */options);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\nexport default DragRotateAndZoom;","map":{"version":3,"names":["PointerInteraction","mouseOnly","shiftKeyOnly","DragRotateAndZoom","constructor","options","condition_","condition","lastAngle_","undefined","lastMagnitude_","lastScaleDelta_","duration_","duration","handleDragEvent","mapBrowserEvent","map","size","getSize","offset","pixel","deltaX","deltaY","theta","Math","atan2","magnitude","sqrt","view","getView","angleDelta","adjustRotationInternal","adjustResolutionInternal","handleUpEvent","direction","endInteraction","handleDownEvent","beginInteraction"],"sources":["C:/Users/hasan/webproj/openlayers-project/node_modules/ol/interaction/DragRotateAndZoom.js"],"sourcesContent":["/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}