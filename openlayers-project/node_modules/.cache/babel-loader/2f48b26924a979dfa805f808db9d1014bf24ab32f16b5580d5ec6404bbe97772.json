{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const fetchUsers = createAsyncThunk(\"user/fetchUsers\", async (_, {\n  rejectWithValue\n}) => {\n  const token = localStorage.getItem(\"token\");\n  try {\n    const response = await fetch(\"https://localhost:7014/api/Users\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    const data = await response.json();\n    if (!data.result) {\n      return rejectWithValue(data.message);\n    }\n    return data.value;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    users: [],\n    status: \"idle\",\n    error: null\n  },\n  reducers: {\n    addUser: (state, action) => {\n      state.users.push(action.payload);\n    },\n    updateUser: (state, action) => {\n      const updatedUser = action.payload;\n      const index = state.users.findIndex(user => user.id === updatedUser.id);\n      if (index !== -1) {\n        state.users[index] = updatedUser;\n      }\n    },\n    deleteUser: (state, action) => {\n      const id = action.payload;\n      state.users = state.users.filter(user => user.id !== id);\n    },\n    clearUsers: state => {\n      state.users = [];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchUsers.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchUsers.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.users = action.payload;\n    }).addCase(fetchUsers.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n    });\n  }\n});\nexport const selectUsers = state => state.user.users;\nexport const {\n  addUser,\n  updateUser,\n  deleteUser,\n  clearUsers\n} = userSlice.actions;\nexport const selectUserStatus = state => state.user.status;\nexport const selectUserError = state => state.user.error;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchUsers","_","rejectWithValue","token","localStorage","getItem","response","fetch","method","headers","ok","Error","data","json","result","message","value","error","userSlice","name","initialState","users","status","reducers","addUser","state","action","push","payload","updateUser","updatedUser","index","findIndex","user","id","deleteUser","filter","clearUsers","extraReducers","builder","addCase","pending","fulfilled","rejected","selectUsers","actions","selectUserStatus","selectUserError","reducer"],"sources":["C:/Users/hasan/webproj/openlayers-project/src/store/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchUsers = createAsyncThunk(\"user/fetchUsers\", async (_, { rejectWithValue }) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    const response = await fetch(\"https://localhost:7014/api/Users\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Network response was not ok\");\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    if (!data.result) {\r\n      return rejectWithValue(data.message);\r\n    }\r\n\r\n    return data.value;\r\n  } catch (error) {\r\n    return rejectWithValue(error.message);\r\n  }\r\n});\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    users: [],\r\n    status: \"idle\",\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    addUser: (state, action) => {\r\n      state.users.push(action.payload);\r\n    },\r\n    updateUser: (state, action) => {\r\n      const updatedUser = action.payload;\r\n      const index = state.users.findIndex((user) => user.id === updatedUser.id);\r\n      if (index !== -1) {\r\n        state.users[index] = updatedUser;\r\n      }\r\n    },\r\n    deleteUser: (state, action) => {\r\n      const id = action.payload;\r\n      state.users = state.users.filter((user) => user.id !== id);\r\n    },\r\n    clearUsers: (state) => {\r\n      state.users = [];\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchUsers.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(fetchUsers.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.users = action.payload;\r\n      })\r\n      .addCase(fetchUsers.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const selectUsers = (state) => state.user.users;\r\nexport const { addUser, updateUser, deleteUser, clearUsers } = userSlice.actions;\r\nexport const selectUserStatus = (state) => state.user.status;\r\nexport const selectUserError = (state) => state.user.error;\r\nexport default userSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}