{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n/* export const fetchWktData = createAsyncThunk('wkt/fetchWktData', async () => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await fetch('https://localhost:7014/api/Logs', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      token: token\r\n    })\r\n  });\r\n  const data = await response.json();\r\n  return data;\r\n}); */\n\nexport const fetchWktData = createAsyncThunk('wkt/fetchWktData', async (_, {\n  rejectWithValue\n}) => {\n  const token = localStorage.getItem(\"token\");\n  try {\n    const response = await fetch('https://localhost:7014/api/Logs', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    if (!data.result) {\n      return rejectWithValue(data.message);\n    }\n    return data.value;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst wktSlice = createSlice({\n  name: 'wkt',\n  initialState: {\n    wktData: [],\n    status: 'idle',\n    error: null,\n    hasFetched: false\n  },\n  reducers: {\n    resetHasFetched: state => {\n      state.hasFetched = true;\n    },\n    addFeature: (state, action) => {\n      state.wktData.push(action.payload);\n    },\n    clearWktData: state => {\n      state.wktData = [];\n    },\n    deleteFeature: (state, action) => {\n      const id = action.payload;\n      state.wktData = state.wktData.filter(feature => feature.id !== id);\n    },\n    updateFeature: (state, action) => {\n      const updatedFeature = action.payload;\n      const index = state.wktData.findIndex(feature => feature.id === updatedFeature.id);\n      if (index !== -1) {\n        state.wktData[index] = updatedFeature;\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchWktData.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchWktData.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.wktData = action.payload;\n      state.hasFetched = true;\n    }).addCase(fetchWktData.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const selectWktData = state => state.wkt.wktData;\nexport const {\n  resetHasFetched,\n  addFeature,\n  updateFeature,\n  deleteFeature,\n  clearWktData\n} = wktSlice.actions;\nexport const selectHasFetched = state => state.wkt.hasFetched;\nexport const selectWktStatus = state => state.wkt.status;\nexport const selectWktError = state => state.wkt.error;\nexport default wktSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchWktData","_","rejectWithValue","token","localStorage","getItem","response","fetch","method","headers","ok","Error","data","json","result","message","value","error","wktSlice","name","initialState","wktData","status","hasFetched","reducers","resetHasFetched","state","addFeature","action","push","payload","clearWktData","deleteFeature","id","filter","feature","updateFeature","updatedFeature","index","findIndex","extraReducers","builder","addCase","pending","fulfilled","rejected","selectWktData","wkt","actions","selectHasFetched","selectWktStatus","selectWktError","reducer"],"sources":["C:/Users/hasan/webproj/openlayers-project/src/store/wktSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n/* export const fetchWktData = createAsyncThunk('wkt/fetchWktData', async () => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await fetch('https://localhost:7014/api/Logs', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      token: token\r\n    })\r\n  });\r\n  const data = await response.json();\r\n  return data;\r\n}); */\r\n\r\nexport const fetchWktData = createAsyncThunk('wkt/fetchWktData', async (_, { rejectWithValue }) => {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  try {\r\n    const response = await fetch('https://localhost:7014/api/Logs', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    if (!data.result) {\r\n      return rejectWithValue(data.message);\r\n    }\r\n\r\n    return data.value;\r\n  } catch (error) {\r\n    return rejectWithValue(error.message);\r\n  }\r\n});\r\n\r\n\r\n\r\nconst wktSlice = createSlice({\r\n  name: 'wkt',\r\n  initialState: {\r\n    wktData: [], \r\n    status: 'idle', \r\n    error: null,\r\n    hasFetched: false,\r\n  },\r\n  reducers: {\r\n    resetHasFetched: (state) => {\r\n      state.hasFetched = true;\r\n    },\r\n    addFeature: (state, action) => {\r\n      state.wktData.push(action.payload);\r\n    },\r\n    clearWktData: (state) => {\r\n      state.wktData = [];\r\n    },\r\n    deleteFeature: (state, action) => {\r\n      const id = action.payload;\r\n      state.wktData = state.wktData.filter(feature => feature.id !== id);\r\n    },\r\n    updateFeature: (state, action) => {\r\n      const updatedFeature = action.payload;\r\n      const index = state.wktData.findIndex((feature) => feature.id === updatedFeature.id);\r\n      if (index !== -1) {\r\n        state.wktData[index] = updatedFeature;\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchWktData.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchWktData.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.wktData = action.payload;\r\n        state.hasFetched = true;\r\n      })\r\n      .addCase(fetchWktData.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const selectWktData = (state) => state.wkt.wktData;\r\nexport const { resetHasFetched, addFeature, updateFeature, deleteFeature, clearWktData} = wktSlice.actions;\r\nexport const selectHasFetched = (state) => state.wkt.hasFetched;\r\nexport const selectWktStatus = (state) => state.wkt.status;\r\nexport const selectWktError = (state) => state.wkt.error;\r\nexport default wktSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}